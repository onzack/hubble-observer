apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hubble-observer.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "hubble-observer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "hubble-observer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "hubble-observer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh", "-c"]
        args: ["hubble observe {{- if ne .Values.verdictFilter "none" }} --verdict {{ .Values.verdictFilter }}{{- end }} --follow --ip-translation --server $HUBBLE_RELAY_HOST.{{ .Values.hubbleRelay.namespace }}.svc.cluster.local:$HUBBLE_RELAY_PORT -o json > /proc/1/fd/1"]
        env:
        - name: HUBBLE_RELAY_HOST
          value: {{ .Values.hubbleRelay.serviceName | quote }}
        - name: HUBBLE_RELAY_PORT
          value: {{ .Values.hubbleRelay.port | quote }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command:
            - hubble
            - status
            - --server
            - "$(HUBBLE_RELAY_HOST):$(HUBBLE_RELAY_PORT)"
          {{- with .Values.livenessProbe }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          successThreshold: {{ .successThreshold }}
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
          {{- end }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          exec:
            command:
            - hubble
            - status
            - --server
            - "$(HUBBLE_RELAY_HOST):$(HUBBLE_RELAY_PORT)"
          {{- with .Values.readinessProbe }}
          periodSeconds: {{ .periodSeconds }}
          successThreshold: {{ .successThreshold }}
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
          {{- end }}
        {{- end }}
        {{- if .Values.startupProbe.enabled }}
        startupProbe:
          exec:
            command:
            - hubble
            - status
            - --server
            - "$(HUBBLE_RELAY_HOST):$(HUBBLE_RELAY_PORT)"
          {{- with .Values.startupProbe }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          successThreshold: {{ .successThreshold }}
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
          {{- end }}
        {{- end }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 50Mi
